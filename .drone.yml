# kind: pipeline
# type: docker
# name: default

# steps:
#   - name: build
#     image: python:3.9
#     commands:
#       - pip install -r requirements.txt
#       # - pytest  # Assuming you have tests set up
#       - docker build -t ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}:${DRONE_COMMIT_SHA} .
#       - docker tag ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}:${DRONE_COMMIT_SHA} ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}:latest

#   - name: publish
#     image: plugins/docker
#     settings:
#       repo: ${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}
#       tags:
#         - latest
#         - ${DRONE_COMMIT_SHA}
#       username:
#         from_secret: docker_username
#       password:
#         from_secret: docker_token

# trigger:
#   event:
#     - push
#   branch:
#     - main
#     - master

kind: pipeline
type: docker
name: default

steps:
  - name: build-and-push
    image: plugins/docker
    settings:
      username:
        from_secret: docker_username
      password:
        from_secret: docker_token
      repo: abudev22/djangoapp
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:8}
    when:
      branch:
        - main

  - name: notify-discord
    image: appleboy/drone-discord
    settings:
      webhook_id:
        from_secret: discord_webhook_url
      message: >
        {{#success build.status}}
          Build {{build.number}} succeeded. Docker image pushed to DockerHub.
        {{else}}
          Build {{build.number}} failed.
        {{/success}}
    when:
      status: [success, failure]



